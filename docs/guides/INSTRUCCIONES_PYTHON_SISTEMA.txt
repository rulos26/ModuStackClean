üîß INFORMACI√ìN DEL SISTEMA - VERSI√ìN PYTHON
============================================

üìã DESCRIPCI√ìN:
La nueva funcionalidad "Informaci√≥n del Sistema" en Python te permite obtener un an√°lisis
completo y detallado del hardware y software de tu computadora, con opciones de exportaci√≥n.

üöÄ FUNCIONALIDADES DISPONIBLES:

1. üìä SCRIPT PRINCIPAL: info_sistema.py
   - Informaci√≥n completa del sistema en tiempo real
   - An√°lisis detallado de hardware y software
   - Generaci√≥n de reportes en formato texto
   - Compatible con Windows, Linux y macOS

2. üîß INTEGRACI√ìN EN GESTOR: gestor_descargas.py
   - Opci√≥n 7: "Informaci√≥n del sistema"
   - Resumen r√°pido del sistema
   - Acceso directo desde el men√∫ principal

3. üì¶ INSTALADOR: instalar_dependencias.py
   - Instalaci√≥n autom√°tica de dependencias
   - Verificaci√≥n de paquetes necesarios
   - Configuraci√≥n completa del entorno

üíª INFORMACI√ìN RECOPILADA:

SISTEMA OPERATIVO:
- Nombre y versi√≥n del SO
- Arquitectura (32/64 bits)
- Hostname y plataforma
- Informaci√≥n del procesador

HARDWARE:
- CPU: Nombre, n√∫cleos f√≠sicos/l√≥gicos, frecuencia, uso actual
- GPU: Tarjetas gr√°ficas detectadas con memoria
- RAM: Total, usado, disponible, swap
- Almacenamiento: Discos, particiones, espacio libre

RED:
- Interfaces de red activas
- Direcciones IP
- Estad√≠sticas de tr√°fico (bytes enviados/recibidos)

SOFTWARE:
- Versi√≥n de Python y m√≥dulos cargados
- Informaci√≥n del ejecutable
- Plataforma de ejecuci√≥n

PROCESOS:
- Top 10 procesos por uso de CPU
- Informaci√≥n de memoria por proceso
- PID y nombres de procesos

USUARIOS:
- Usuarios conectados actualmente
- Terminal y host de conexi√≥n
- Tiempo de inicio de sesi√≥n

TIEMPO:
- Fecha y hora actual
- Zona horaria
- Uptime del sistema

üì¶ INSTALACI√ìN:

1. INSTALAR DEPENDENCIAS:
   python instalar_dependencias.py

2. O INSTALACI√ìN MANUAL:
   pip install psutil reportlab matplotlib numpy

3. VERIFICAR INSTALACI√ìN:
   python info_sistema.py

üîß USO:

1. DESDE EL GESTOR PRINCIPAL:
   python gestor_descargas.py
   ‚Üí Seleccionar opci√≥n 7: "Informaci√≥n del sistema"

2. SCRIPT INDEPENDIENTE:
   python info_sistema.py
   ‚Üí Muestra resumen y opci√≥n de guardar reporte completo

3. GENERAR REPORTE:
   - El script pregunta si quieres guardar un reporte
   - Se guarda autom√°ticamente con timestamp
   - Formato: informacion_sistema_YYYYMMDD_HHMMSS.txt

üìä VENTAJAS DE LA VERSI√ìN PYTHON:

‚úÖ M√ÅS DETALLADA:
- Informaci√≥n m√°s profunda del hardware
- An√°lisis de procesos en tiempo real
- Estad√≠sticas de red completas

‚úÖ M√ÅS R√ÅPIDA:
- Optimizada para Python
- Sin dependencias de servidor web
- Ejecuci√≥n directa en consola

‚úÖ M√ÅS COMPATIBLE:
- Funciona en Windows, Linux, macOS
- No requiere servidor web
- Independiente del entorno PHP

‚úÖ M√ÅS FLEXIBLE:
- F√°cil de modificar y extender
- C√≥digo fuente disponible
- Integraci√≥n con otros scripts Python

üõ†Ô∏è CONFIGURACI√ìN AVANZADA:

PERSONALIZAR INFORMACI√ìN:
- Editar info_sistema.py para agregar m√°s datos
- Modificar formatear_tama√±o() para diferentes unidades
- Agregar nuevas categor√≠as de informaci√≥n

EXPORTAR EN DIFERENTES FORMATOS:
- Modificar guardar_reporte() para otros formatos
- Agregar exportaci√≥n a JSON, CSV, XML
- Integrar con bases de datos

AUTOMATIZAR REPORTES:
- Programar ejecuci√≥n con cron (Linux/macOS)
- Usar Task Scheduler (Windows)
- Enviar reportes por email

‚ö†Ô∏è NOTAS IMPORTANTES:

PERMISOS:
- Algunas funciones requieren permisos de administrador
- En Windows, ejecutar como administrador para informaci√≥n completa
- En Linux, usar sudo para acceso completo al hardware

PRIVACIDAD:
- El reporte incluye informaci√≥n sensible del sistema
- Mantener los archivos de reporte seguros
- No compartir informaci√≥n de red p√∫blicamente

COMPATIBILIDAD:
- psutil 5.8.0+ recomendado
- Python 3.6+ requerido
- Algunas funciones pueden no estar disponibles en entornos restringidos

üîÑ ACTUALIZACIONES:

MANTENER ACTUALIZADO:
- Actualizar psutil regularmente: pip install --upgrade psutil
- Verificar nuevas versiones de Python
- Revisar cambios en las APIs del sistema

üìû SOPORTE:

PROBLEMAS COMUNES:
1. "psutil no est√° instalado":
   ‚Üí Ejecutar: python instalar_dependencias.py

2. "Informaci√≥n de hardware no disponible":
   ‚Üí Ejecutar como administrador
   ‚Üí Verificar permisos del sistema

3. "Error al acceder a /proc/":
   ‚Üí Verificar permisos en Linux
   ‚Üí Usar sudo si es necesario

4. "Comandos WMIC no funcionan":
   ‚Üí Verificar que WMIC est√© disponible en Windows
   ‚Üí Ejecutar como administrador

LOGS Y DEBUG:
- Los errores se muestran en consola
- Usar try/except para capturar errores espec√≠ficos
- Verificar la salida de subprocess.run() para comandos del sistema

üìù EJEMPLOS DE USO:

1. REPORTE R√ÅPIDO:
   python info_sistema.py
   ‚Üí Resumen en pantalla

2. REPORTE COMPLETO:
   python info_sistema.py
   ‚Üí Resumen + reporte guardado

3. DESDE GESTOR:
   python gestor_descargas.py
   ‚Üí Opci√≥n 7 para informaci√≥n del sistema

4. INSTALACI√ìN COMPLETA:
   python instalar_dependencias.py
   ‚Üí Instalar todas las dependencias

üéØ PR√ìXIMAS MEJORAS:

FUTURAS VERSIONES:
- Exportaci√≥n a PDF con ReportLab
- Gr√°ficos con Matplotlib
- Monitoreo en tiempo real
- Alertas de rendimiento
- Integraci√≥n con APIs de hardware
- Reportes programados autom√°ticos

¬°La versi√≥n Python ofrece una experiencia m√°s completa y profesional para el an√°lisis del sistema!
