#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Setup de Base de Datos Local - ModuStackClean
Script para configurar y verificar la conexi√≥n a MySQL local (XAMPP)
"""

import sys
import os
import socket
import time

# Agregar el directorio actual al path para importar m√≥dulos
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.database_config_local import DatabaseConfigLocal

def check_xampp_mysql():
    """Verificar si XAMPP MySQL est√° ejecut√°ndose"""
    print("üîç Verificando XAMPP MySQL...")
    
    try:
        # Probar conectividad al puerto 3306
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(5)
        result = sock.connect_ex(('localhost', 3306))
        sock.close()
        
        if result == 0:
            print("‚úÖ XAMPP MySQL est√° ejecut√°ndose")
            return True
        else:
            print("‚ùå XAMPP MySQL no est√° ejecut√°ndose")
            print("üí° Inicia XAMPP y activa el servicio MySQL")
            return False
    except Exception as e:
        print(f"‚ùå Error verificando XAMPP: {e}")
        return False

def setup_local_database():
    """Configurar base de datos local"""
    print("\nüîß Configurando base de datos local...")
    
    db_config = DatabaseConfigLocal()
    connection_info = db_config.get_connection_info()
    
    print(f"üìã Configuraci√≥n local:")
    print(f"   Host: {connection_info['host']}")
    print(f"   Puerto: {connection_info['port']}")
    print(f"   Base de datos: {connection_info['database']}")
    print(f"   Usuario: {connection_info['user']}")
    print(f"   Timeout: {connection_info['timeout']} segundos")
    
    # Crear base de datos
    print("\nüìã Creando base de datos...")
    if db_config.create_database():
        print("‚úÖ Base de datos creada/verificada")
    else:
        print("‚ùå Error creando base de datos")
        return False
    
    # Crear tablas
    print("\nüìã Creando tablas...")
    if db_config.create_tables():
        print("‚úÖ Tablas creadas/verificadas")
    else:
        print("‚ùå Error creando tablas")
        return False
    
    return True

def test_local_connection():
    """Probar conexi√≥n a la base de datos local"""
    print("\nüîó Probando conexi√≥n a la base de datos local...")
    
    db_config = DatabaseConfigLocal()
    
    if db_config.test_connection():
        print("‚úÖ Conexi√≥n a la base de datos local exitosa")
        return True
    else:
        print("‚ùå Error en la conexi√≥n a la base de datos local")
        return False

def show_xampp_instructions():
    """Mostrar instrucciones para configurar XAMPP"""
    print("\n" + "=" * 60)
    print("üìã INSTRUCCIONES PARA CONFIGURAR XAMPP")
    print("=" * 60)
    
    print("\n1Ô∏è‚É£ **Iniciar XAMPP:**")
    print("   - Abre el Panel de Control de XAMPP")
    print("   - Haz clic en 'Start' junto a MySQL")
    print("   - Verifica que el estado sea 'Running'")
    
    print("\n2Ô∏è‚É£ **Acceder a phpMyAdmin:**")
    print("   - Abre tu navegador")
    print("   - Ve a: http://localhost/phpmyadmin")
    print("   - Usuario: root (sin contrase√±a por defecto)")
    
    print("\n3Ô∏è‚É£ **Crear base de datos manualmente (opcional):**")
    print("   - En phpMyAdmin, haz clic en 'Nueva'")
    print("   - Nombre: modustackclean")
    print("   - Cotejamiento: utf8mb4_unicode_ci")
    print("   - Haz clic en 'Crear'")
    
    print("\n4Ô∏è‚É£ **Verificar configuraci√≥n:**")
    print("   - El puerto 3306 debe estar disponible")
    print("   - El usuario 'root' debe tener permisos")
    print("   - No debe haber otros servicios MySQL ejecut√°ndose")

def main():
    """Funci√≥n principal de configuraci√≥n local"""
    print("üöÄ Setup de Base de Datos Local - ModuStackClean")
    print("=" * 60)
    
    # Verificar XAMPP MySQL
    if not check_xampp_mysql():
        print("\n‚ùå XAMPP MySQL no est√° ejecut√°ndose")
        show_xampp_instructions()
        return False
    
    # Configurar base de datos local
    if not setup_local_database():
        print("\n‚ùå Error configurando la base de datos local")
        return False
    
    # Probar conexi√≥n
    if not test_local_connection():
        print("\n‚ùå Error en la conexi√≥n local")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ ¬°CONFIGURACI√ìN LOCAL COMPLETADA EXITOSAMENTE!")
    print("=" * 60)
    print("‚úÖ XAMPP MySQL ejecut√°ndose")
    print("‚úÖ Base de datos local creada")
    print("‚úÖ Tablas creadas/verificadas")
    print("‚úÖ Conexi√≥n local establecida")
    print("\nüöÄ La base de datos local est√° lista para usar!")
    print("\nüí° Para usar la base de datos remota, ejecuta:")
    print("   python setup_database.py")
    
    return True

if __name__ == "__main__":
    success = main()
    if not success:
        print("\n‚ùå La configuraci√≥n local no se complet√≥ correctamente")
        print("üí° Sigue las instrucciones de XAMPP arriba")
    sys.exit(0 if success else 1)
